name: Deploy to Demo and Test
on: [push, pull_request]
#     branches:
#       - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      
      # Build for demo
      - name: Build and publish demo docker image 
#         if: github.ref == 'refs/heads/demo'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: demo-storefrontcloud-io/vue-storefront-api:${{ github.sha }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: docker/vue-storefront-api/docker/vue-storefront-api/Dockerfile
          buildoptions: "--compress"
      
      # Build for test
      - name: Build and publish test docker image
#         if: github.ref == 'refs/heads/test'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: test-storefrontcloud-io/vue-storefront-api:${{ github.sha }}
          registry: registry.vuestorefront.io
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: docker/vue-storefront-api/docker/vue-storefront-api/Dockerfile
          buildoptions: "--compress"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment for ${GITHUB_REF##*/}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test'
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://${GITHUB_REF##*/}.europe-west1.gcp.storefrontcloud.io
          environment: production
          initial_status: in_progress

      # Deploy on test/demo depending on the branch that triggered the workflow
      - name: Deploy on ${GITHUB_REF##*/}.europe-west1.gcp.storefrontcloud.io
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test'
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X POST -d '
          {
              "code":"${GITHUB_REF##*/}",
              "region":"europe-west1.gcp",
              "frontContainerVersion":"${{ github.sha }}"
          }' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://${GITHUB_REF##*/}.europe-west1.gcp.storefrontcloud.io
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://${GITHUB_REF##*/}.europe-west1-southeast1.gcp.storefrontcloud.io
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
