version: '3.0'
services:
  es1:
    container_name: elasticsearch
    build: docker/elasticsearch/
    ulimits:
      memlock:
        soft: -1
        hard: -1    
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"

  kibana:
    build: docker/kibana/
    volumes:
      - ./docker/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - '5601:5601'
    depends_on:
      - es1

  redis:
    image: 'redis:4-alpine'
    ports:
      - '6379:6379'

  vsf-api-app-budsies:
    build:
      context: .
      dockerfile: docker/vue-storefront-api/Dockerfile
    depends_on:
      - es1
      - redis
    environment:
      BIND_PORT: ${BUDSIES_PORT}
      VS_ENV: ${VS_ENV}
      VIRTUAL_HOST: ${BUDSIES_DOMAIN}
      LETSENCRYPT_HOST: ${BUDSIES_DOMAIN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VSF_DOMAIN: ${BUDSIES_VSF_DOMAIN}
      DEFAULT_STORE_DOMAIN: ${BUDSIES_STORE_DOMAIN}
      DEFAULT_STORE: ${BUDSIES_STORE}
      DEFAULT_STORE_ID: ${BUDSIES_STORE_ID}
      JP_STORE_ID: ${JP_STORE_ID}
      MAGENTO_USER_NAME: ${MAGENTO_USER_NAME}
      MAGENTO_USER_PASSWORD: ${MAGENTO_USER_PASSWORD}
      STORYBLOK_TOKEN: ${STORYBLOK_TOKEN}
      STORYBLOK_HOOK_SECRET: ${STORYBLOK_HOOK_SECRET}
    volumes:
      #- './config:/var/www/config'
      - './ecosystem.json:/var/www/ecosystem.json'
      - './migrations:/var/www/migrations'
      - './package.json:/var/www/package.json'
      - './babel.config.js:/var/www/babel.config.js'
      - './tsconfig.json:/var/www/tsconfig.json'
      - './nodemon.json:/var/www/nodemon.json'
      - './scripts:/var/www/scripts'
      - './src:/var/www/src'
      - './var:/var/www/var'
    tmpfs:
      - /var/www/dist
    networks:
      - default
      - reverseproxy
    expose:
      - ${BUDSIES_PORT}

  vsf-api-app-petsies:
    build:
      context: .
      dockerfile: docker/vue-storefront-api/Dockerfile
    depends_on:
      - es1
      - redis
    environment:
      BIND_PORT: ${PETSIES_PORT}
      VS_ENV: ${VS_ENV}
      VIRTUAL_HOST: ${PETSIES_DOMAIN}
      LETSENCRYPT_HOST: ${PETSIES_DOMAIN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VSF_DOMAIN: ${PETSIES_VSF_DOMAIN}
      DEFAULT_STORE_DOMAIN: ${PETSIES_STORE_DOMAIN}
      DEFAULT_STORE: ${PETSIES_STORE}
      DEFAULT_STORE_ID: ${PETSIES_STORE_ID}
      MAGENTO_USER_NAME: ${MAGENTO_USER_NAME}
      MAGENTO_USER_PASSWORD: ${MAGENTO_USER_PASSWORD}
      STORYBLOK_TOKEN: ${STORYBLOK_TOKEN}
      STORYBLOK_HOOK_SECRET: ${STORYBLOK_HOOK_SECRET}
    volumes:
      #- './config:/var/www/config'
      - './ecosystem.json:/var/www/ecosystem.json'
      - './migrations:/var/www/migrations'
      - './package.json:/var/www/package.json'
      - './babel.config.js:/var/www/babel.config.js'
      - './tsconfig.json:/var/www/tsconfig.json'
      - './nodemon.json:/var/www/nodemon.json'
      - './scripts:/var/www/scripts'
      - './src:/var/www/src'
      - './var:/var/www/var'
    tmpfs:
      - /var/www/dist
    networks:
      - default
      - reverseproxy
    expose:
      - ${PETSIES_PORT}

networks:
  reverseproxy:
    external:
        name: webdevelopmentreverseproxy_default

volumes:
  esdat1:
